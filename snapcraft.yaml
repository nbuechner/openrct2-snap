name: openrct2-unofficial
base: core22
version: 0.4.10
summary: OpenRCT2 is an open-source re-implementation of RollerCoaster Tycoon 2 (RCT2)
compression: xz
description: |
    OpenRCT2 is expanding the game with new features, fixing bugs and raising game limits.
    The gameplay revolves around building and maintaining an amusement park containing attractions, shops and facilities.
    The player must try to make a profit and maintain a good park reputation whilst keeping the guests happy.
    OpenRCT2 allows for both scenario and sandbox play.
    Scenarios require the player to complete a certain objective in a set time limit whilst sandbox allows the player to build a more flexible park with optionally no restrictions or finance.

    Files required for the game will be downloaded to ~/snap/openrct2/common/RCT on first launch.

    Source: https://github.com/OpenRCT2/OpenRCT2/
    Snap-Source: https://github.com/nbuechner/openrtc2-snap

grade: stable
confinement: strict
architectures:
  - build-on: amd64
    build-for: amd64

apps:
  openrtc2:
    command: bin/openrct2.sh
    plugs: [home, x11, desktop, removable-media, network, audio-playback, opengl ]
    #extensions: [ gnome ]

  openrtc2-cli:
    command: bin/openrct2-cli.sh
    plugs: [home, removable-media, network]

parts:
  main:
    after: [prepare]
    source: https://github.com/OpenRCT2/OpenRCT2/archive/refs/tags/v$SNAPCRAFT_PROJECT_VERSION.tar.gz
    plugin: cmake
    source-type: tar
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release
    build-packages:
      - libsdl2-dev
      - libicu-dev
      - libspeex-dev
      - libspeexdsp-dev
      - libcurl4-openssl-dev
      - libcrypto++-dev
      - libfontconfig1-dev
      - libfreetype6-dev
      - libpng-dev
      - libssl-dev
      - libzip-dev
      - nlohmann-json3-dev
      - libbenchmark-dev
      - libflac-dev
      - libvorbis-dev
    stage-packages:
      - libcurl4
      - libzip4
      - libsdl2-2.0-0
      - libspeexdsp1
      - libbenchmark1
      - libflac8
      - libgzstream0
      - libpng16-16
      - libssl3
  prepare:
    source: .
    plugin: dump
    stage-packages:
      - zenity
      - aria2
      - unzip
    override-build: |
      mkdir -p bin/
      cd bin
      echo "#!/bin/sh" >  openrct2.sh
      echo "if [ ! -d \$SNAP_USER_COMMON/RCT/ObjData ]; then" >> openrct2.sh
      echo "  mkdir -p \$SNAP_USER_COMMON/RCT" >> openrct2.sh
      echo "  cd \$SNAP_USER_COMMON" >> openrct2.sh
      echo "  rm -f RCT*.zip " >> openrct2-cli.sh
      echo "  aria2c https://archive.org/download/OpenRCT2Assets/RCT.zip -j6 -x6 --summary-interval=10 | grep -E --line-buffered -o '\([0-9]+%\)' | sed -u 's/[^0-9]//g' | zenity --text='Downloading game files. Please wait.' --progress --percentage=0 --auto-close --auto-kill --title='Download required'" >> openrct2.sh
      echo "  rm -Rf RCT " >> openrct2.sh
      echo "  unzip RCT.zip " >> openrct2.sh
      echo "  rm -f RCT.zip " >> openrct2.sh
      echo "fi" >> openrct2.sh
      echo "\$SNAP/usr/bin/openrct2 --rct2-data-path=\$SNAP_USER_COMMON/RCT" >> openrct2.sh
      echo "exit 0" >> openrct2.sh
      chmod a+rx openrct2.sh

      echo "#!/bin/sh" >  openrct2-cli.sh
      echo "if [ ! -d \$SNAP_USER_COMMON/RCT/ObjData ]; then" >> openrct2-cli.sh
      echo "  mkdir -p \$SNAP_USER_COMMON/RCT" >> openrct2-cli.sh
      echo "  echo \"Downloading missig game files. Please wait...\"" >> openrct2-cli.sh
      echo "  cd \$SNAP_USER_COMMON" >> openrct2-cli.sh
      echo "  rm -f RCT*.zip " >> openrct2-cli.sh
      echo "  aria2c https://archive.org/download/OpenRCT2Assets/RCT.zip -summary-interval=0 -j6 -x6" >> openrct2-cli.sh
      echo "  rm -Rf RCT " >> openrct2-clu.sh
      echo "  unzip RCT.zip " >> openrct2-cli.sh
      echo "  rm -f RCT.zip " >> openrct2-cli.sh
      echo "fi" >> openrct2-cli.sh
      echo "\$SNAP/usr/bin/openrct2-cli --rct2-data-path=\$SNAP_USER_COMMON/RCT" >> openrct2-cli.sh
      echo "exit 0" >> openrct2-cli.sh
      chmod a+rx openrct2-cli.sh

      cd ..
      craftctl default

layout:
  /usr/share/zenity:
    bind: $SNAP/usr/share/zenity
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libGLX_nvidia.so.0:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libGLX_nvidia.so.0
  /usr/share/libdrm:
    bind: $SNAP/usr/share/libdrm
lint:
  ignore:
    - classic
    - library
